}
else
if(input$var=="11") {
Nscore[12,]
}
else
if(input$var=="12") {
Nscore[13,]
}
else
if(input$var=="13") {
Nscore[14,]
}
else
if
(input$var=="14") {
Nscore[15,]
}
else
if(input$var=="15") {
Nscore[16,]
}
else
if(input$var=="16") {
Nscore[17,]
}
else
if(input$var=="17") {
Nscore[18,]
}
else
if(input$var=="18") {
Nscore[19,]
}
else
if(input$var=="19") {
Nscore[20,]
}
else
if(input$var=="20") {
Nscore[21,]
}
else
if
(input$var=="21") {
Nscore[22,]
}
else
if(input$var=="22") {
Nscore[23,]
}
else
if(input$var=="23") {
Nscore[24,]
}
else
if(input$var=="24") {
Nscore[25,]
}
else
if
(input$var=="25") {
Nscore[26,]
}
else
if(input$var=="26") {
Nscore[27,]
}
else
if(input$var=="28") {
Nscore[29,]
}
else
if(input$var=="29") {
Nscore[30,]
}
else
if
(input$var=="30") {
Nscore[31,]
}
else
if(input$var=="31") {
Nscore[32,]
}
else
if(input$var=="32") {
Nscore[33,]
}
else
if(input$var=="42") {
Nscore[33,]
}
})
output$mytable <- renderTable({
m <- descr(score,
stats = c("mean", "sd", "min", "max"),
transpose = FALSE)
class(m) <-"matrix"
m %>% as_tibble(rownames="Statistic")
})
output$tree<- renderPlot({
tree1<-rpart.plot(fit.rpart,roundint=F,type=1)
})
}
shinyApp(ui, server)
}
library(shiny); runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
train1
train1<-read_rds("D:\\2.64\\midterm\\train1.RDS")
train1
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
runApp('C:/Users/Lenovo/OneDrive/Desktop/test.R')
train1<-read_rds("D:\\2.64\\midterm\\train1.RDS")
train1
data5
data5<- data.frame(total=70, stringsAsFactors = F)
resultpred<-as.character(predict(train1, data5))
resultpred
data5<- data.frame(total=50, stringsAsFactors = F)
resultpred<-as.character(predict(train1, data5))
resultpred
library(dplyr)
library(readxl)
library("mice")
library(caret)
library(randomForest)
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\learning data\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\learning data\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\learning data\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model<-rbind(dat1, dat2, dat3, dat4)
dat1
dat2
dat3
dat4
model<-rbind(dat1, dat2, dat3, dat4)
glimpse(dat63_1)
dat1<-dat63_1[c(5,9:15)]
dat1
glimpse(re61_1)
library(dplyr)
library(readxl)
library("mice")
library(caret)
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model<-rbind(dat1, dat2, dat3, dat4)
glimpse(model)
summary(model)
model[is.na(model)] = 0
summary(model)
names(model)[1]<-paste("midtrem")
##train.dat Recode
train.dat<-model%>%mutate(result1=if_else(total<55,0,
if_else(total>=55 & total<75,1,
if_else(total<85,2,3))))
table(train.dat$result1)
train.dat$result1<-factor(train.dat$result1, labels = c("fail", "pass","good", "verygood"))
#RANDOM FOREST
fit.rf<-randomForest(result1~midtrem, data=train.dat)
fit.rf
#testing data
pred.rf<-predict(fit.rf, train.dat, type = "response")
write_rds(fit.rf, "D:\\2.64\\midtrem\\modelRan1.RDS")
write_rds(fit.rf, "D:\\2.64\\midtrem\\modelRan1.RDS")
library(dplyr)
saveRDS(fit.rf, "D:\\2.64\\midtrem\\modelRan1.RDS")
saveRDS(fit.rf, "D:\\2.64\\Shiny\\modelRan1.RDS")
library(dplyr)
library(readxl)
library("mice")
library(caret)
library(randomForest)
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model<-rbind(dat1, dat2, dat3, dat4)
glimpse(model)
summary(model)
model[is.na(model)] = 0
summary(model)
names(model)[1]<-paste("midtrem")
##train.dat Recode
train.dat<-model%>%mutate(result1=if_else(total<55,0,
if_else(total>=55 & total<75,1,
if_else(total<85,2,3))))
table(train.dat$result1)
train.dat$result1<-factor(train.dat$result1, labels = c("fail", "pass","good", "verygood"))
#RANDOM FOREST
fit.rf<-randomForest(result1~midtrem, data=train.dat)
#RANDOM FOREST
fit.rf1<-randomForest(result1~midtrem, data=train.dat)
fit.rf1
#testing data
pred.rf<-predict(fit.rf1, train.dat, type = "prob")
#testing data
pred.rf1<-predict(fit.rf1, train.dat, type = "prob")
pred.rf1
confusionMatrix(pred.rf1, train.dat$result1)
fit.rf1
#testing data
pred.rf1<-predict(fit.rf1, train.dat, type = "prob")
saveRDS(fit.rf1, "D:\\2.64\\Shiny\\modelRan2.RDS")
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model<-rbind(dat1, dat2, dat3, dat4)
glimpse(model)
summary(model)
model[is.na(model)] = 0
summary(model)
names(model)[1]<-paste("midtrem")
##train.dat Recode
train.dat<-model%>%mutate(result1=if_else(total<55,0,
if_else(total>=55 & total<75,1,
if_else(total<85,2,3))))
table(train.dat$result1)
train.dat$result1<-factor(train.dat$result1, labels = c("fail", "pass","good", "verygood"))
#RANDOM FOREST
fit.rf<-randomForest(result1~total, data=train.dat)
fit.rf
#testing data
pred.rf<-predict(fit.rf, train.dat, type = "response")
confusionMatrix(pred.rf, train.dat$result1)
#RANDOM FOREST
fit.rf2<-randomForest(result1~total, data=train.dat)
fit.rf2
#testing data
pred.rf2<-predict(fit.rf2, train.dat, type = "response")
confusionMatrix(pred.rf2, train.dat$result1)
saveRDS(fit.rf2, "D:\\2.64\\Shiny\\modelRan3.RDS")
fit.rf2
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model1<-rbind(dat1, dat2, dat3, dat4)
summary(model1)
model1[is.na(model1)] = 0
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
model1<-rbind(dat1, dat2, dat3, dat4)
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model1<-rbind(dat1, dat2, dat3, dat4)
summary(model1)
model1[is.na(model1)] = 0
names(model)[1]<-paste("midtrem")
names(model1)[1]<-paste("midtrem")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
fit.rpart<-rpart(result2~midtrem, data=train.dat[-8],
method="class")
library(rpart)
library(rpart.plot)
fit.rpart<-rpart(result2~midtrem, data=train.dat[-8],
method="class")
rpart.plot(fit.rpart,roundint=F,type=1)
library(rpart.plot)
train.dat
fit.rpart<-rpart(result2~midtrem, data=train.dat[-8],
method="class")
rpart.plot(fit.rpart,roundint=F,type=1)
train.dat$result2<-as.factor(train.dat$result2)
##evaluation modle
pred.class<-predict(fit.rpart,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
fit.rpart<-rpart(result2~midtrem, data=train.dat[-8],
method="class")
rpart.plot(fit.rpart, roundint=F,type=1)
##evaluation modle
pred.class<-predict(fit.rpart,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
train.dat$result2<-as.factor(train.dat$result2)
##evaluation modle
pred.class<-predict(fit.rpart,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
train.dat$result2<-factor(train.dat$result2, labels = c("fail", "pass"))
train.dat
fit.rpart<-rpart(result2~midtrem, data=train.dat[-8],
method="class")
rpart.plot(fit.rpart, roundint=F,type=1)
train.dat$result2<-as.factor(train.dat$result2)
##evaluation modle
pred.class<-predict(fit.rpart,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
saveRDS(fit.rpart, "D:\\2.64\\Shiny\\modeltree.RDS")
library(dplyr)
library(readxl)
library(caret)
library(rpart)
library(rpart.plot)
dat63_1<-read_excel("D:\\2.64\\Shiny\\63-1.xlsx")
re61_1<-read_excel("D:\\2.64\\Shiny\\report 61-1.xlsx")
re61_2<-read_excel("D:\\2.64\\Shiny\\report 61-2.xlsx")
re61_3<-read_excel("D:\\2.64\\Shiny\\report 62-2.xlsx")
glimpse(dat63_1)
glimpse(re61_1)
glimpse(re61_2)
glimpse(re61_3)
dat1<-dat63_1[c(5,9:15)]
dat2<-re61_1[c(2:9)]
dat3<-re61_2[c(5,9:15)]
dat4<-re61_3[c(2:8,10)]
model1<-rbind(dat1, dat2, dat3, dat4)
summary(model1)
model1[is.na(model1)] = 0
names(model1)[1]<-paste("midtrem")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
train.dat$result2<-factor(train.dat$result2, labels = c("fail", "pass"))
train.dat
fit.rpart<-rpart(result2~total, data=train.dat[-8],
method="class")
fit.rpart<-rpart(result2~total, data=train.dat,
method="class")
rpart.plot(fit.rpart,roundint=F,type=1)
fit.rpart1<-rpart(result2~total, data=train.dat,
method="class")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
train.dat$result2<-factor(train.dat$result2, labels = c("fail", "pass"))
fit.rpart1<-rpart(result2~total, data=train.dat,
method="class")
rpart.plot(fit.rpart1,roundint=F,type=1)
train.dat$result2<-as.factor(train.dat$result2)
##evaluation modle
pred.class<-predict(fit.rpart1,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
#Recode
train.dat<-model1%>%mutate(result2=if_else(total>=70,"1","0"))
train.dat$result2<-factor(train.dat$result2, labels = c("fail", "pass"))
#Decision tree
set.seed(123)
fit.rpart1<-rpart(result2~total, data=train.dat,
method="class")
rpart.plot(fit.rpart1,roundint=F,type=1)
fit.rpart1
fit.rpart1<-rpart(result2~total, data=train.dat,
method="class")
rpart.plot(fit.rpart1,roundint=F,type=1)
train.dat$result2<-as.factor(train.dat$result2)
##evaluation modle
pred.class<-predict(fit.rpart1,newdata=train.dat,type="class")
caret::confusionMatrix(pred.class, train.dat$result2, positive="1")
saveRDS(fit.rpart1, "D:\\2.64\\Shiny\\modeltree1.RDS")
shiny::runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
data<-read.csv("D:\\2.64\\Shiny\\63-2.csv", encoding = "UTF-8")
glimpse(data)
data[is.na(data)] = 0
glimpse(data)
data<-data%>%mutate(total= rowSums(data[5:10]))
names(data)[1]<-paste("No.")
data$student_ID<-as.character(data$student_ID)
Nscore<-data[c(1,2,5:11)]
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
trainModel<-read_rds("D:\\2.64\\Shiny\\modelRan1.RDS")
trainModel
runApp('D:/2.64/Shiny')
trainModel
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
trainModel
A<-data.frame(midtrem=70, stringsAsFactors = F)
resultPred<-s.character(predict(trainModel, A))
resultPred<-as.character(predict(trainModel, A))
resultPred
A<-data.frame(midtrem=50, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel, A))
resultPred
trainModel1<-read_rds("D:\\2.64\\Shiny\\modelRan3.RDS")
trainModel1
A<-data.frame(midtrem=50, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel3, A))
resultPred<-as.character(predict(trainModel1, A))
A<-data.frame(total=50, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel1, A))
resultPred
A<-data.frame(total=70, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel1, A))
resultPred
runApp('D:/2.64/Shiny')
library('FastqCleaner')
install.packages("fastqcr")
library('Fastqr')
library(fastqcr)
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
trainModel2<-read_rds("D:\\2.64\\Shiny\\modeltree.RDS")
trainModel2
A<-data.frame(midterm=20, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel2, A))
A
resultPred<-as.character(predict(trainModel2, A))
A<-data.frame(total=20, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel2, A))
A
A<-data.frame(midterm=20, stringsAsFactors = F)
A
resultPred<-as.character(predict(trainModel2, A))
A<-data.frame(total=20, stringsAsFactors = F)
resultPred<-as.character(predict(trainModel1, A))
trainModel1
shiny::runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
contentdata<-read.csv("D:\\2.64\\Shiny\\content.csv.", encoding = "UTF-8")
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
contentdata
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
?renderPrint
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
runApp('D:/2.64/Shiny')
